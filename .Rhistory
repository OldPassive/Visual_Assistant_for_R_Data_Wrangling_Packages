library(dplyr)
library(tidyr)
library(ggvis)
setwd("E:/Projects/Visual_Assistant_for_R_Data_Wrangling_Packages")
library(nycflights13)
library(EDAWR)
mtcars %>% ggvis(singular(), ~mpg) %>% layer_points()
vector_type(x)
load("E:/Projects/Visual_Assistant_for_R_Data_Wrangling_Packages/.RData")
vector_type(x)
vega_data_parser(x)
library(ggvis)
vega_data_parser(x)
vega_data_parser(x)
zero_range(c(1, 1 + 2 * eps), tol = eps)
zero_range(c(1, 1 + 2 * eps), tol = .Machine$double.eps)
resolution(y, - 0.5, FALSE)
resolution(y, FALSE)
mtcars %>% compute_count(~cyl, ~wt)
mtcars %>% compute_tabulate(~factor(cyl))
mtcars %>% compute_count(~mpg) %>% compute_align(~x_)
mtcars %>% group_by(cyl) %>% compute_bin(~mpg, width = 10)
mtcars %>% cbind(count = 1) %>% compute_stack(~count, ~cyl)
View(mtcars %>% cbind(count = 1) %>% compute_stack(~count, ~cyl))
mtcars %>% ggvis(~mpg) %>% compute_density(~mpg, n = 5) %>%
layer_points(~pred_, ~resp_)
mtcars %>% compute_density(~mpg, n = 5)
mtcars %>% group_by(cyl) %>% compute_boxplot(~mpg)
mtcars %>% compute_model_prediction(mpg ~ wt, n = 10, se = TRUE)
mtcars %>% compute_smooth(mpg ~ wt)
view(mtcars %>% compute_smooth(mpg ~ wt))
View(mtcars %>% compute_smooth(mpg ~ wt))
